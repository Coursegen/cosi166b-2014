---
title: (LAB) Sprint 1
desc: Intro to test drivenn development
homework: Get into TDD first time. Teams submit schema and stories
---

<%= homework_hdr %>

* Read some background on Test Driven Development
  * Read [MiniTest::Spec tutorial](http://www.rubyinside.com/a-minitestspec-tutorial-elegant-spec-style-testing-that-comes-with-ruby-5354.html)
  * Read [Minitest Quick Reference](http://mattsears.com/articles/2011/12/10/minitest-quick-reference)
  * Read [Rails Testing Pyramid](http://blog.codeclimate.com/blog/2013/10/09/rails-testing-pyramid/)
  * Do the following assignment: <%= link_to_topic :hw_tdd %>. Do the work in your <%= link_to_intro :portfolio %> in a `tdd` directory.
* Teams: Please get back on your regular meeting schedule with your team mates. I know the snow has been crazy but it's important. For this lab I'd like you to prepare two things:
  * List of stories, prioritized, in trello. Note that this should be your current best guess, but naturally you will be able to make changes as you go along.
  * Carefully worked out schema for your product. Include table names, column names, column datatypes, primary and foreign keys, and One/Many to One/Many relatationship arrows.
  * <%= team_deliverable "link to your trello, and pdf with your schema." %>

#### Project Status

* Projects: You should be working on steps 1, 2, 3, 4, 7, 8, 9 of the <%= link_to_topic :project_roadmap %>
* Each team: Quick summary of status:
  1. What have you completed
  1. What are you working on now
  1. What are you working on next?

#### Discussion on homework
* Did you really do TDD? What is the key to it?
* How did it feel to program in this way? Was it easier, harder, different?
* Conventions: file names, separating the tests from the code (why?)

#### Testing Intro
<%= include_topic :tdd_intro %>

#### Demo
* <%= link_to_topic :tdd_demo %>

#### Discussion
* What do "I" do with testing in "real life"?
* Let's review some of the options in [Minitest Quick Reference](http://mattsears.com/articles/2011/12/10/minitest-quick-reference)

##### Test Data
* Sometimes known as test fixtures
* What is the role of data in developing tests for your application
* Some ways of thinking about test data
* Avoiding Brittle tests
* Mocking objects
    * Let's look at some of the code that runs this web site.
    * Note slightly different syntax because of RSpec vs. minitest/spec
    * [citem_spec.rb](https://github.com/pitosalas/curriculu/blob/master/spec/citem_spec.rb)
    * [toc_spec.rb](https://github.com/pitosalas/curriculu/blob/master/spec/toc_spec.rb)

#### Testing in Rails (if we have time)
* Principle is the same
* Remember there's no good reason to test whether Rails is doing what it is supposed to do
* For example, whether validations are validating, or whether has_many is actually working
    * Maybe a few tests to poke some holes, but certainly not each and every test.
* Reference: [Using Minitest/spec with Rails 4](http://blowmage.com/2013/07/08/minitest-spec-rails4)
* Let's take a tour of all the test bits that are created for free for you in Rails
<%= code_begin %>
rails new shoes
group :test do
  gem 'minitest-spec-rails'
end
rails generate scaffold Shoes name:string price:float color:string size:integer
rake db:migrate
<%= code_end %>

* Reference: [How I learned to test my Rails Applications, Part 4](http://everydayrails.com/2012/04/07/testing-series-rspec-controllers.html)







#### Look at next class
* Look at homework <%= link_to_next_lecture %>
